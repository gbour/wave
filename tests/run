#!/usr/bin/python
# -*- coding: utf8 -*-

import sys
import inspect

import TestSuite
import testsuite

#from testsuite import *
#from testsuite import plop
COUNTERS = {'passed': 0, 'failed': 0, 'skipped': 0}

def update_counters(update):
    for k, v in update.iteritems():
        COUNTERS[k] = COUNTERS.get(k, 0) + v

def print_summary():
    print "\n  \033[1;42;30m {passed} ᴘᴀssᴇᴅ \033[0m \033[41;37m {failed} ғᴀɪʟᴇᴅ \033[0m \033[1;43;30m {skipped} sᴋɪᴘᴘᴇᴅ \033[0m\n".format(**COUNTERS)

if __name__ == '__main__':
    modfilter = None
    if len(sys.argv) > 1:
        modfilter = sys.argv[1]

    testfilter = None
    if len(sys.argv) > 2:
        testfilter = sys.argv[2]

    status = True

    for (modname, mod) in inspect.getmembers(testsuite, predicate=inspect.ismodule):
        if modfilter and not modfilter in modname:
            continue

        for (clsname, cls) in inspect.getmembers(mod, predicate=inspect.isclass):
            #mro = inspect.getmro(cls)
            #if len(mro) < 2 or mro[1] != TestSuite.TestSuite:
            if not issubclass(cls, TestSuite.TestSuite) or cls == TestSuite.TestSuite:
                continue

            #print modname,clsname, inspect.getmro(cls)
            (ret, counters) = cls().run(testfilter)
            status = ret and status
            update_counters(counters)

    print_summary()
    sys.exit(0 if status else 11)
